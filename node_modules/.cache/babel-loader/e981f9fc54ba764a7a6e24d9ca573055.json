{"ast":null,"code":"var _jsxFileName = \"/Users/meghangosselin/Apps/pfolio_front/src/smart/Login.js\";\nimport React, { Component } from 'react';\nimport Project from '../stupid/Project';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Login.scss';\nconst baseURL = 'http://localhost:3000/';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      newUser: false\n    };\n\n    this.onChangeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.changeLoginStatus = () => {\n      this.setState({\n        newUser: !this.state.newUser\n      });\n    };\n  }\n\n  onSubmitHandler(e) {\n    e.preventDefault();\n    console.log(this.state);\n\n    if (this.state.newUser) {\n      // user = await axios.post(`${baseURL}api/v1/users`, {\n      //     username: this.state.email,\n      //     password: this.state.password\n      //   });\n      fetch('http://localhost:3000/api/v1/users', {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: {\n            username: this.state.email,\n            password: this.state.password\n          }\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"User:\", data);\n        localStorage.setItem(\"token\", data.jwt);\n      });\n    } else {\n      console.log(\"User\");\n    }\n  } // loginShopper = (username, password) => {\n  //     return fetch('http://localhost:3000/api/v1/login', {\n  //         method: \"POST\",\n  //         body: JSON.stringify({\n  //             shopper: {username: username, password: password}}),\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             Accept: \"application/json\"\n  //         }\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //         localStorage.setItem(\"token\", data.jwt);\n  //             return dispatch(loginTheShopper(data.shopper))\n  //     })\n  //     .catch(() => dispatch(loginFailed(\"fail\")))\n  // }\n\n\n  render() {\n    console.log(\"status: \", this.state.newUser);\n    return React.createElement(\"section\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Administrator Login\"), React.createElement(\"form\", {\n      onChange: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.newUser ? \"Create Login\" : \"Login\")), React.createElement(\"h3\", {\n      onClick: this.changeLoginStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.newUser ? \"Back To Login\" : \"Create New Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/meghangosselin/Apps/pfolio_front/src/smart/Login.js"],"names":["React","Component","Project","Link","axios","baseURL","Login","state","email","password","newUser","onChangeHandler","event","setState","target","name","value","changeLoginStatus","onSubmitHandler","e","preventDefault","console","log","fetch","method","body","JSON","stringify","user","username","headers","Accept","then","response","json","data","localStorage","setItem","jwt","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Project from '../stupid/Project';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Login.scss';\n\nconst baseURL = 'http://localhost:3000/';\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        newUser: false\n    }\n\n    onChangeHandler = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n    }\n    \n    onSubmitHandler(e) {\n        e.preventDefault();\n        console.log(this.state);\n        if (this.state.newUser) {\n            // user = await axios.post(`${baseURL}api/v1/users`, {\n            //     username: this.state.email,\n            //     password: this.state.password\n            //   });\n\n            fetch('http://localhost:3000/api/v1/users', {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuser: {username: this.state.email, password: this.state.password}}),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\n\t\t})\n\t\t.then(response => response.json())\n        .then(data => {\n            console.log(\"User:\", data);\n            localStorage.setItem(\"token\", data.jwt);\n        })\n        } else {\n            console.log(\"User\");\n        }\n    }\n\n    // loginShopper = (username, password) => {\n\t\n        \n    //     return fetch('http://localhost:3000/api/v1/login', {\n    //         method: \"POST\",\n    //         body: JSON.stringify({\n    //             shopper: {username: username, password: password}}),\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             Accept: \"application/json\"\n    //         }\n\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         localStorage.setItem(\"token\", data.jwt);\n    //             return dispatch(loginTheShopper(data.shopper))\n    //     })\n    //     .catch(() => dispatch(loginFailed(\"fail\")))\n        \n    // }\n\n    changeLoginStatus = () => {\n        this.setState({\n            newUser: !this.state.newUser\n        })\n    }\n\n    render() {\n        console.log(\"status: \", this.state.newUser);\n        return (\n            <section id=\"login\">\n                \n                <div className=\"login-box\">\n                    <h1>Administrator Login</h1>\n                    <form onChange={this.onChangeHandler} onSubmit={this.onSubmitHandler.bind(this)}>\n                        <input name=\"email\" type=\"email\" placeholder=\"email\"></input>\n                        <input name=\"password\" type=\"password\" placeholder=\"password\"></input>\n                        <button>{this.state.newUser ? \"Create Login\" : \"Login\"}</button>\n                    </form>\n                    <h3 onClick={this.changeLoginStatus}>{this.state.newUser ? \"Back To Login\" : \"Create New Login\"}</h3>\n                </div>\n                \n            </section>\n        );\n    }\n    \n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}