{"ast":null,"code":"var _jsxFileName = \"/Users/meghangosselin/Apps/pfolio_front/src/client/components/Skill.js\";\nimport React, { Component } from 'react';\nimport '../../css/client_css/Skill.scss';\n\nclass Skill extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      divStyle: {}\n    };\n  }\n\n  componentDidMount() {\n    const barLength = \"\".concat(level, \"%\");\n    const skillSection = document.querySelector('#skills');\n    const iObserver = new IntersectionObserver(entries => {\n      console.log(\"entries2: \", level);\n\n      if (!entries[0].isIntersecting) {\n        this.setState({\n          divStyle: {\n            height: '100%',\n            width: '0%',\n            transitionDuration: '2s'\n          }\n        });\n      } else {\n        this.setState({\n          divStyle: {\n            height: '100%',\n            width: barLength,\n            transitionDuration: '2s'\n          }\n        });\n      }\n    });\n    iObserver.observe(skillSection);\n  }\n\n  render() {\n    console.log(\"props: \", this.state.skill.name);\n    const _this$props$skill = this.props.skill,\n          name = _this$props$skill.name,\n          level = _this$props$skill.level;\n    return React.createElement(\"div\", {\n      class: \"skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, name), React.createElement(\"div\", {\n      className: \"skill-meter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"skill-level\",\n      style: this.state.divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default Skill;","map":{"version":3,"sources":["/Users/meghangosselin/Apps/pfolio_front/src/client/components/Skill.js"],"names":["React","Component","Skill","state","divStyle","componentDidMount","barLength","level","skillSection","document","querySelector","iObserver","IntersectionObserver","entries","console","log","isIntersecting","setState","height","width","transitionDuration","observe","render","skill","name","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iCAAP;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAEhB,UAAMC,SAAS,aAAMC,KAAN,MAAf;AACA,UAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAArB;AACA,UAAMC,SAAS,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,KAA1B;;AACA,UAAI,CAACM,OAAO,CAAC,CAAD,CAAP,CAAWG,cAAhB,EAAgC;AAC5B,aAAKC,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAE;AACNc,YAAAA,MAAM,EAAE,MADF;AAENC,YAAAA,KAAK,EAAE,IAFD;AAGNC,YAAAA,kBAAkB,EAAE;AAHd;AADA,SAAd;AAOH,OARD,MAQO;AACH,aAAKH,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAE;AACNc,YAAAA,MAAM,EAAE,MADF;AAENC,YAAAA,KAAK,EAAEb,SAFD;AAGNc,YAAAA,kBAAkB,EAAE;AAHd;AADA,SAAd;AAOH;AACA,KAnBiB,CAAlB;AAqBAT,IAAAA,SAAS,CAACU,OAAV,CAAkBb,YAAlB;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKZ,KAAL,CAAWoB,KAAX,CAAiBC,IAAxC;AADK,8BAEiB,KAAKC,KAAL,CAAWF,KAF5B;AAAA,UAEEC,IAFF,qBAEEA,IAFF;AAAA,UAEQjB,KAFR,qBAEQA,KAFR;AAGL,WACI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKiB,IAAL,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AASH;;AA7CyB;;AA8C7B;AACD,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../css/client_css/Skill.scss';\n\nclass Skill extends Component {\n    state = {\n        divStyle: {}\n    }\n\n    componentDidMount() {\n        \n        const barLength = `${level}%`;\n        const skillSection = document.querySelector('#skills');\n        const iObserver = new IntersectionObserver(entries => {\n        console.log(\"entries2: \", level);\n        if (!entries[0].isIntersecting) {\n            this.setState({\n                divStyle: {\n                    height: '100%',\n                    width: '0%',\n                    transitionDuration: '2s'\n                }\n            })\n        } else {\n            this.setState({\n                divStyle: {\n                    height: '100%',\n                    width: barLength,\n                    transitionDuration: '2s'\n                }\n            })\n        }\n        });\n\n        iObserver.observe(skillSection);\n    }\n    \n    render() {\n        console.log(\"props: \", this.state.skill.name);\n        const {name, level} = this.props.skill;\n        return (\n            <div class=\"skill\">\n                <h3>{name}</h3>\n                <div className=\"skill-meter\">\n                    <div className=\"skill-level\" style={this.state.divStyle}></div>\n                </div>\n            </div>\n            \n        );\n    }   \n};\nexport default Skill;"]},"metadata":{},"sourceType":"module"}