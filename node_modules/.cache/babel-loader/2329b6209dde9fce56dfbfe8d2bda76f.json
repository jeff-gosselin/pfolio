{"ast":null,"code":"var _jsxFileName = \"/Users/meghangosselin/Apps/pfolio_front/src/smart/EditProjectForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaRegWindowClose } from 'react-icons/fa';\nimport '../css/AddProject.scss';\nconst baseURL = 'http://localhost:3000/';\n\nclass EditProjectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.project.title ? this.props.project.title : '',\n      tech: this.props.project.technologies ? this.props.project.technologies : '',\n      url: this.props.project.url ? this.props.project.url : '',\n      github: this.props.project.github ? this.props.project.github : '',\n      desc: this.props.project.description ? this.props.project.description : '',\n      image: null // Can't figure this out... getting the correct data from the file upload input\n\n    };\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFile = event => {\n      this.setState({\n        image: event.currentTarget.files[0]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      for (let elem in this.state) {\n        if (this.state[elem] === '' || this.state[elem] === null) {\n          return null;\n        }\n      }\n\n      let id = localStorage.getItem(\"id\");\n      let projID = this.props.project.id;\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      today = mm + '/' + dd + '/' + yyyy;\n      const formData = new FormData();\n      formData.append('project[title]', this.state.title);\n      formData.append('project[technologies]', this.state.tech);\n      formData.append('project[url]', this.state.url);\n      formData.append('project[github]', this.state.github);\n      formData.append('project[description]', this.state.desc);\n      formData.append('project[image]', this.state.image);\n      formData.append('project[date]', today);\n      formData.append('project[user_id]', id);\n      axios({\n        url: \"\".concat(baseURL, \"api/v1/projects/\").concat(projID),\n        method: 'POST',\n        headers: {\n          authorization: \"Bearer \".concat(localStorage.token)\n        },\n        data: formData\n      }).then(res => console.log(res)).then(this.props.projectFormToggle());\n    };\n  }\n\n  render() {\n    console.log(\"data: \", this.props.project.description);\n    return React.createElement(\"div\", {\n      className: \"add-project-backdrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"close\",\n      onClick: this.props.projectFormToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FaRegWindowClose, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Edit Project\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      placeholder: \"Title\",\n      onChange: this.handleInput,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"tech\",\n      type: \"text\",\n      placeholder: \"Technologies\",\n      onChange: this.handleInput,\n      value: this.state.tech,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"url\",\n      type: \"text\",\n      placeholder: \"URL\",\n      onChange: this.handleInput,\n      value: this.state.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"github\",\n      type: \"text\",\n      placeholder: \"Github\",\n      onChange: this.handleInput,\n      value: this.state.github,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"desc\",\n      type: \"text\",\n      placeholder: \"Description\",\n      onChange: this.handleInput,\n      value: this.state.desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: this.handleFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Update Project\"))));\n  }\n\n}\n\n;\nexport default EditProjectForm;","map":{"version":3,"sources":["/Users/meghangosselin/Apps/pfolio_front/src/smart/EditProjectForm.js"],"names":["React","Component","axios","FaRegWindowClose","baseURL","EditProjectForm","state","title","props","project","tech","technologies","url","github","desc","description","image","handleInput","event","setState","target","name","value","handleFile","currentTarget","files","handleSubmit","preventDefault","elem","id","localStorage","getItem","projID","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","formData","FormData","append","method","headers","authorization","token","data","then","res","console","log","projectFormToggle","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {FaRegWindowClose} from 'react-icons/fa';\nimport '../css/AddProject.scss';\n\nconst baseURL = 'http://localhost:3000/';\n\nclass EditProjectForm extends Component {\n    state = {\n        title: this.props.project.title ? this.props.project.title : '',\n        tech: this.props.project.technologies ? this.props.project.technologies : '',\n        url: this.props.project.url ? this.props.project.url : '',\n        github: this.props.project.github ? this.props.project.github : '',\n        desc: this.props.project.description ? this.props.project.description : '',  \n        image: null  \n    }\n\n    // Can't figure this out... getting the correct data from the file upload input\n    handleInput = (event) => {\n        \n            this.setState({\n                [event.target.name]: event.target.value\n            })\n\t\t\n    }\n\n    handleFile = (event) => {\n        this.setState({\n            image: event.currentTarget.files[0]\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        for (let elem in this.state) {\n            if(this.state[elem] === '' || this.state[elem] === null) {\n                return null;\n            }         \n        }\n\n        let id = localStorage.getItem(\"id\");\n        let projID = this.props.project.id;\n\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth()+1; //January is 0!\n        var yyyy = today.getFullYear();\n        if(dd<10) {\n            dd = '0'+dd\n        } \n        if(mm<10) {\n            mm = '0'+mm\n        } \n        today = mm + '/' + dd + '/' + yyyy;\n\n        const formData = new FormData();\n        formData.append('project[title]', this.state.title);\n        formData.append('project[technologies]', this.state.tech);\n        formData.append('project[url]', this.state.url);\n        formData.append('project[github]', this.state.github);\n        formData.append('project[description]', this.state.desc);\n        formData.append('project[image]', this.state.image);\n        formData.append('project[date]', today);\n        formData.append('project[user_id]', id);\n        \n        axios({\n            url: `${baseURL}api/v1/projects/${projID}`,\n            method: 'POST',\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            },\n            data: formData\n        }).then(res => console.log(res))\n        .then(this.props.projectFormToggle());  \n    }\n\n    render() {\n        console.log(\"data: \", this.props.project.description);\n        return (\n            <div className=\"add-project-backdrop\">\n                <div className=\"add-project\">\n                    <div className=\"close\" onClick={this.props.projectFormToggle}><FaRegWindowClose/></div>\n                    <h1>Edit Project</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        <input name=\"title\" type=\"text\" placeholder=\"Title\" onChange={this.handleInput} value={this.state.title} />\n                        <input name=\"tech\" type=\"text\" placeholder=\"Technologies\" onChange={this.handleInput} value={this.state.tech} />\n                        <input name=\"url\" type=\"text\" placeholder=\"URL\" onChange={this.handleInput} value={this.state.url} />\n                        <input name=\"github\" type=\"text\" placeholder=\"Github\" onChange={this.handleInput} value={this.state.github} />\n                        <textarea name=\"desc\" type=\"text\" placeholder=\"Description\" onChange={this.handleInput} value={this.state.desc} />\n                        <input type=\"file\" name=\"image\" onChange={this.handleFile}/>\n                        <button>Update Project</button> \n                    </form>\n                </div>      \n            </div>\n            \n        );\n    }\n    \n    \n};\nexport default EditProjectForm;"]},"metadata":{},"sourceType":"module"}